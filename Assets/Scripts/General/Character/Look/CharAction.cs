


using Helper;

namespace ms
{
	public class CharAction
	{
		public enum Id : byte
		{
			NONE = 0,

			savage,
			alert2,
			alert3,
			alert4,
			alert5,
			alert6,
			paralyze,
			ladder2,
			rope2,
			shoot6,
			magic1,
			magic2,
			magic3,
			magic4,
			magic5,
			burster1,
			burster2,
			avenger,
			assaulter,
			prone2,
			assassination,
			assassinationS,
			rush,
			rush2,
			sanctuary,
			meteor,
			blizzard,
			genesis,
			brandish1,
			brandish2,
			ninjastorm,
			chainlightning,
			blast,
			showdown,
			smokeshell,
			holyshield,
			resurrection,
			straight,
			handgun,
			somersault,
			doublefire,
			triplefire,
			fake,
			doubleupper,
			eburster,
			screw,
			dash,
			backspin,
			eorb,
			dragonstrike,
			airstrike,
			edrain,
			octopus,
			backstep,
			timeleap,
			shot,
			recovery,
			fist,
			fireburner,
			coolingeffect,
			homing,
			rapidfire,
			cannon,
			torpedo,
			darksight,
			bamboo,
			wave,
			blade,
			souldriver,
			firestrike,
			flamegear,
			stormbreak,
			shockwave,
			demolition,
			snatch,
			windspear,
			windshot,
			vampire,
			swingT2PoleArm,
			swingP1PoleArm,
			swingP2PoleArm,
			combatStep,
			doubleSwing,
			tripleSwing,
			finalCharge,
			finalToss,
			finalBlow,
			comboSmash,
			comboFenrir,
			fullSwingDouble,
			fullSwingTriple,
			overSwingDouble,
			overSwingTriple,
			rollingSpin,
			comboTempest,
			floating,
			pyramid,
			magicmissile,
			superMagicmissile,
			dragonSpark,
			dragonBreathe,
			breathe_prepare,
			icebreathe_prepare,
			infinityExplosion,
			illusion,
			dragonIceBreathe,
			magicFlare,
			elementalReset,
			elementalRegistance,
			magicBooster,
			dragonShield,
			dragonFury,
			dragonFly,
			dragonAura,
			dragonSkin,
			flickerjab,
			uppercut,
			eblast,
			hashing,
			elbowattack,
			energyorb,
			dragonrising,
			bombing,
			energysteal,
			filling,


		}

		public static EnumMap<Id, string> names = new EnumMap<Id, string>
		{
			[Id.NONE] = "",
			[Id.savage] = "savage",
			[Id.alert2] = "alert2",
			[Id.alert3] = "alert3",
			[Id.alert4] = "alert4",
			[Id.alert5] = "alert5",
			[Id.alert6] = "alert6",
			[Id.paralyze] = "paralyze",
			[Id.ladder2] = "ladder2",
			[Id.rope2] = "rope2",
			[Id.shoot6] = "shoot6",
			[Id.magic1] = "magic1",
			[Id.magic2] = "magic2",
			[Id.magic3] = "magic3",
			[Id.magic4] = "magic4",
			[Id.magic5] = "magic5",
			[Id.burster1] = "burster1",
			[Id.burster2] = "burster2",
			[Id.avenger] = "avenger",
			[Id.assaulter] = "assaulter",
			[Id.prone2] = "prone2",
			[Id.assassination] = "assassination",
			[Id.assassinationS] = "assassinationS",
			[Id.rush] = "rush",
			[Id.rush2] = "rush2",
			[Id.sanctuary] = "sanctuary",
			[Id.meteor] = "meteor",
			[Id.blizzard] = "blizzard",
			[Id.genesis] = "genesis",
			[Id.brandish1] = "brandish1",
			[Id.brandish2] = "brandish2",
			[Id.ninjastorm] = "ninjastorm",
			[Id.chainlightning] = "chainlightning",
			[Id.blast] = "blast",
			[Id.showdown] = "showdown",
			[Id.smokeshell] = "smokeshell",
			[Id.holyshield] = "holyshield",
			[Id.resurrection] = "resurrection",
			[Id.straight] = "straight",
			[Id.handgun] = "handgun",
			[Id.somersault] = "somersault",
			[Id.doublefire] = "doublefire",
			[Id.triplefire] = "triplefire",
			[Id.fake] = "fake",
			[Id.doubleupper] = "doubleupper",
			[Id.eburster] = "eburster",
			[Id.screw] = "screw",
			[Id.dash] = "dash",
			[Id.backspin] = "backspin",
			[Id.eorb] = "eorb",
			[Id.dragonstrike] = "dragonstrike",
			[Id.airstrike] = "airstrike",
			[Id.edrain] = "edrain",
			[Id.octopus] = "octopus",
			[Id.backstep] = "backstep",
			[Id.timeleap] = "timeleap",
			[Id.shot] = "shot",
			[Id.recovery] = "recovery",
			[Id.fist] = "fist",
			[Id.fireburner] = "fireburner",
			[Id.coolingeffect] = "coolingeffect",
			[Id.homing] = "homing",
			[Id.rapidfire] = "rapidfire",
			[Id.cannon] = "cannon",
			[Id.torpedo] = "torpedo",
			[Id.darksight] = "darksight",
			[Id.bamboo] = "bamboo",
			[Id.wave] = "wave",
			[Id.blade] = "blade",
			[Id.souldriver] = "souldriver",
			[Id.firestrike] = "firestrike",
			[Id.flamegear] = "flamegear",
			[Id.stormbreak] = "stormbreak",
			[Id.shockwave] = "shockwave",
			[Id.demolition] = "demolition",
			[Id.snatch] = "snatch",
			[Id.windspear] = "windspear",
			[Id.windshot] = "windshot",
			[Id.vampire] = "vampire",
			[Id.swingT2PoleArm] = "swingT2PoleArm",
			[Id.swingP1PoleArm] = "swingP1PoleArm",
			[Id.swingP2PoleArm] = "swingP2PoleArm",
			[Id.combatStep] = "combatStep",
			[Id.doubleSwing] = "doubleSwing",
			[Id.tripleSwing] = "tripleSwing",
			[Id.finalCharge] = "finalCharge",
			[Id.finalToss] = "finalToss",
			[Id.finalBlow] = "finalBlow",
			[Id.comboSmash] = "comboSmash",
			[Id.comboFenrir] = "comboFenrir",
			[Id.fullSwingDouble] = "fullSwingDouble",
			[Id.fullSwingTriple] = "fullSwingTriple",
			[Id.overSwingDouble] = "overSwingDouble",
			[Id.overSwingTriple] = "overSwingTriple",
			[Id.rollingSpin] = "rollingSpin",
			[Id.comboTempest] = "comboTempest",
			[Id.floating] = "float",
			[Id.pyramid] = "pyramid",
			[Id.magicmissile] = "magicmissile",
			[Id.superMagicmissile] = "superMagicmissile",
			[Id.dragonSpark] = "dragonSpark",
			[Id.dragonBreathe] = "dragonBreathe",
			[Id.breathe_prepare] = "breathe_prepare",
			[Id.icebreathe_prepare] = "icebreathe_prepare",
			[Id.infinityExplosion] = "infinityExplosion",
			[Id.illusion] = "illusion",
			[Id.dragonIceBreathe] = "dragonIceBreathe",
			[Id.magicFlare] = "magicFlare",
			[Id.elementalReset] = "elementalReset",
			[Id.elementalRegistance] = "elementalRegistance",
			[Id.magicBooster] = "magicBooster",
			[Id.dragonShield] = "dragonShield",
			[Id.dragonFury] = "dragonFury",
			[Id.dragonFly] = "dragonFly",
			[Id.dragonAura] = "dragonAura",
			[Id.dragonSkin] = "dragonSkin",
			[Id.flickerjab] = "flickerjab",
			[Id.uppercut] = "uppercut",
			[Id.eblast] = "eblast",
			[Id.hashing] = "hashing",
			[Id.elbowattack] = "elbowattack",
			[Id.energyorb] = "energyorb",
			[Id.dragonrising] = "dragonrising",
			[Id.bombing] = "bombing",
			[Id.energysteal] = "energysteal",
			[Id.filling] = "filling",


		};

		public static Id by_id (byte id)
		{
			if (id <= (int)Id.NONE || id >= EnumUtil.GetEnumLength<Id> ())
				return Id.NONE;

			return (Id)(id);
		}

		public static Id by_string (string name)
		{
			foreach (var pair in names)
			{
				if (pair.Value == name)
				{
					return pair.Key;
				}
			}
			return Id.NONE;
		}
	}
}