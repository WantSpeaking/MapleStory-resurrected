//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class MapperItem :  Bright.Config.BeanBase 
{
    public MapperItem(JSONNode _json) 
    {
        { if(!_json["key"].IsString) { throw new SerializationException(); }  Key = _json["key"]; }
        { if(!_json["origin_text"].IsString) { throw new SerializationException(); }  OriginText = _json["origin_text"]; }
        { if(!_json["text_en"].IsString) { throw new SerializationException(); }  TextEn = _json["text_en"]; }
        PostInit();
    }

    public MapperItem(string key, string origin_text, string text_en ) 
    {
        this.Key = key;
        this.OriginText = origin_text;
        this.TextEn = text_en;
        PostInit();
    }

    public static MapperItem DeserializeMapperItem(JSONNode _json)
    {
        return new MapperItem(_json);
    }

    /// <summary>
    /// key
    /// </summary>
    public string Key { get; private set; }
    /// <summary>
    /// 原始的文本仅提示用
    /// </summary>
    public string OriginText { get; private set; }
    /// <summary>
    /// 本地化后的文本
    /// </summary>
    public string TextEn { get; private set; }

    public const int __ID__ = -234520300;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Key:" + Key + ","
        + "OriginText:" + OriginText + ","
        + "TextEn:" + TextEn + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
